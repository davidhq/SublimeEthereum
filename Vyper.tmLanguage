<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>vy</string>
	</array>
	<key>name</key>
	<string>Vyper</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>comment</key>
			<string>Comments</string>
			<key>match</key>
			<string>\#.*</string>
			<key>name</key>
			<string>comment</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(\"\"\")</string>
			<key>comment</key>
			<string>Multiline comments</string>
			<key>end</key>
			<string>(\"\"\")</string>
			<key>name</key>
			<string>comment</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Events</string>
			<key>match</key>
			<string>\b(event|indexed)\b</string>
			<key>name</key>
			<string>keyword.control</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Structures, event definitions</string>
			<key>match</key>
			<string>\b(contract|interface|library|using|struct|constructor|modifier)(\s+[A-Za-z_]\w*)?(?:\s+is\s+((?:[A-Za-z_][\,\s]*)*))?\b</string>
			<key>name</key>
			<string>keyword.control</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>function</string>
			<key>match</key>
			<string>\b(def)(\s+[A-Za-z_]\w*)?\b</string>
			<key>name</key>
			<string>keyword.declaration.function</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>True and false keywords</string>
			<key>match</key>
			<string>\b(True|False)\b</string>
			<key>name</key>
			<string>constant.language</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>self call</string>
			<key>match</key>
			<string>\b(self)\.\b</string>
			<key>name</key>
			<string>storage.type.function</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.numeric</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.control</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Types</string>
			<key>match</key>
			<string>\b(address(?:\s+payable)?|string|bytes?\d*|int\d*|uint\d*|bool|u?fixed\d+x\d+)\b</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Langauge keywords</string>
			<key>match</key>
			<string>\b(constant|map|raise|payable|storage|memory|calldata|if|else|for|while|do|break|continue|return|private|public|immutable|pure|view|internal|external|this|suicide|selfdestruct|delegatecall|emit|new|is|throw|revert|assert|require|\_)\b</string>
			<key>name</key>
			<string>keyword.control</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Vyper specific keywords</string>
			<key>match</key>
			<string>\b(not|and|or|pass|from|import|as)\b</string>
			<key>name</key>
			<string>keyword</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Vyper decorators</string>
			<key>match</key>
			<string>(@[A-Za-z_]\w*)\b</string>
			<key>name</key>
			<string>keyword</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Operators</string>
			<key>match</key>
			<string>(=|!|&gt;|&lt;|\||&amp;|\?|:|\^|~|\*|\+|\-|\/|\%|\bhex\b)</string>
			<key>name</key>
			<string>keyword.operator</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.type</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>msg and block special usage</string>
			<key>match</key>
			<string>\b(msg|block|tx)\.([A-Za-z_]\w*)\b</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.language</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Function call - built-in functions</string>
			<key>match</key>
			<string>\b(blockhash|gasleft|addmod|mulmod|keccak256|sha256|sha3|ripemd160|ecrecover)\s*\(</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.numeric</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.numeric</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Function call, also for example - uint[] memory a = new uint[332](7); or uint[2][] memory arrayOfPairs = new uint[2][](size);</string>
			<key>match</key>
			<string>\b([A-Za-z_]\w*)(?:\[(\d*)\])?(?:\[(\d*)\])?\(</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Special treatment for length and .selector</string>
			<key>match</key>
			<string>\b\.(length|selector)\b</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.type</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>Ether and time units</string>
			<key>match</key>
			<string>\b(wei|gwei|ether|seconds|minutes|hours|days|weeks)\b</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Strings</string>
			<key>match</key>
			<string>([\"\'].*?[\"\'])</string>
			<key>name</key>
			<string>string.quoted</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Numbers, possibly with scientific notation</string>
			<key>match</key>
			<string>\b(?:[+-]?\.?\d[\d_]*[eE]?)(?:\.\d+[eE]?\d*)?\b</string>
			<key>name</key>
			<string>constant.numeric</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Hexadecimal</string>
			<key>match</key>
			<string>\b(0[xX][a-fA-F0-9]+)\b</string>
			<key>name</key>
			<string>constant.numeric</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.vyper</string>
	<key>uuid</key>
	<string>ad87d2cd-8575-4afe-984e-9421a3788911</string>
</dict>
</plist>
